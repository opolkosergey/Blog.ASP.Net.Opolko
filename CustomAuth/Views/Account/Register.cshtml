@model CustomAuth.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        var visibleText = $('#inputFileVisibleText');
        var hidden = $('#inputFileHidden');
        var visibleBtn = $('#inputFileVisibleBtn');
        visibleBtn.on('click', function () {
            hidden.click();
        })
        hidden.on('change', function () {
            var fileName = $(this).val().split('\\');
            fileName = fileName[fileName.length - 1];
            visibleText.val(fileName);
        });
    });
</script>

<div style="padding-top: 200px;">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Register</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon"><i class="glyphicon glyphicon-picture"></i></span>
                <input type="text" class="form-control" placeholder="Прикрепить изображение" id="inputFileVisibleText">
                <input type="file" style="display: none" name="img" id="inputFileHidden" />
                <span class="input-group-btn" style="float: left">
                    <button class="btn btn-default" type="button" id="inputFileVisibleBtn">Обзор</button>
                </span>
            </div>
        </div>




            <div class="form-group">
                @Html.LabelFor(m => m.Captcha, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Captcha, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
                    <div class="img-responsive">
                        <img src="@Url.Action("Captcha", "Account")" alt="captcha" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Register" />
                </div>
            </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
